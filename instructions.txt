--The Forest Service is considering a proposal from a timber company to clear cut a nearby forest of Douglas Fir.
Before this proposal may be approved, they must complete an environmental impact study.
You have been asked to build an application that allows Rangers to track wildlife sightings in the area.--

The application must track two categories of wildlife:

class 1 (Animals)
At the very least, require:

int id;
String name;

class 2 (Endangered Animals)
Due to their dwindling numbers, Rangers must record additional information about EndangeredAnimals:

id
name
health
Use constants to define options like "healthy", "ill", and "okay".
age (an estimated guess by the ranger)
Use constants to define options like "newborn", "young", or "adult".
Each time an animal species of either category is seen, a Sighting must be reported:

Sightings
When wildlife is spotted, a Ranger submits a form to record a Sighting containing the following:

id of Animal or EndangeredAnimal species
location
(Conveyed in any manner you choose ie: "Zone A", "Near the River", "NE Quadrant", or latitude and longitude values are all acceptable.)
rangerName
Exceptions
It may take a few days for new Rangers to familiarize themselves with the app. To avoid saving incomplete or invalid records, throw and catch exceptions if Rangers attempt to submit an incomplete form, or misuse the application in any other conceivable fashion.

Database Naming Requirements
For this code review, use the following database names:

Production Database: wildlife_tracker
Development Database: wildlife_tracker_test
Table Names:animals, sightings
Setup Instructions
In your README, include detailed setup instructions with all commands necessary to re-create your databases, columns, and tables (example below from To Do):

In PSQL:
CREATE DATABASE to_do;
CREATE TABLE categories (id serial PRIMARY KEY, name varchar);
CREATE TABLE tasks (id serial PRIMARY KEY, description varchar);